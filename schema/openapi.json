{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Fitness app",
    "contact": {
      "email": "evie@butland.com",
      "url": "http://example.com/contact"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a free web accessible API that will send out daily workouts to your email. These will be auto generated exercises covering key areas: upper body, lower body, glutes, full body and cardio.\n"
  },
  "externalDocs": {
    "description": "Find out how to create a GitHub repo for your OpenAPI definition.",
    "url": "https://github.com/eviebutland/fitness-app"
  },
  "tags": [
    {
      "name": "exercises",
      "description": "Operations related to exercises."
    },
    {
      "name": "planned workouts",
      "description": "Operations relates to planned workouts."
    },
    {
      "name": "user",
      "description": "Operations relates to users within the platform"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3030"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Get all user",
        "description": "Get a user \n",
        "operationId": "getUsers",
        "security": [
          {
            "main_auth": ["read:users"]
          },
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create a new user",
        "description": "Create a new user",
        "operationId": "createAUser",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "requestBody description",
          "required": true
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["user"],
        "summary": "Get a user",
        "description": "Get a user \n",
        "operationId": "getAUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get a single user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "main_auth": ["read:users"]
          },
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Deletes a user",
        "description": "User can delete own account or be removed by admin",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "main_auth": ["write:users"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["user"],
        "summary": "Updates the user",
        "description": "User's can update their own profile, as well as adding to completed exercises",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "main_auth": ["write:users"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "Updated user object",
          "required": true
        }
      }
    },
    "/exercises": {
      "get": {
        "tags": ["exercises"],
        "summary": "Get all exercises",
        "description": "Get all exercises in the database returned",
        "operationId": "getAllExercises",
        "security": [
          {
            "main_auth": ["read:users"]
          },
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["exercises"],
        "summary": "Create a new exercise",
        "description": "Create a new exercise",
        "operationId": "createExcerise",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Rate-Limit": {
                "description": "Calls per hour allowed by the user.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Exercise"
              }
            }
          },
          "description": "requestBody description",
          "required": true
        }
      }
    },
    "/exercises/{id}": {
      "patch": {
        "tags": ["exercises"],
        "summary": "Updates the exercise",
        "description": "This can only be done by the admin user.",
        "operationId": "updateExercise",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "main_auth": ["write:users"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Exercise"
              }
            }
          },
          "description": "Updated user object",
          "required": true
        }
      },
      "delete": {
        "tags": ["exercises"],
        "summary": "Deletes an exercise",
        "description": "This can only be done by the admin user.",
        "operationId": "deleteExercise",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The exercise that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "main_auth": ["write:users"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/exercise/catergory/{catergory}": {
      "get": {
        "tags": ["exercises"],
        "summary": "Get all exercises in a catergory",
        "description": "Get all exercises in the database returned with the same catergory",
        "operationId": "getAllExercisesInCatergory",
        "parameters": [
          {
            "name": "catergory",
            "in": "path",
            "description": "The exercise that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "main_auth": ["read:users"]
          },
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exercise"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/exercises/planned-workouts": {
      "get": {
        "tags": ["planned workouts"],
        "summary": "Get all planned workouts",
        "description": "Get all planned workouts created",
        "operationId": "getAllPlannedWorkout",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannedWorkout"
                }
              }
            }
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["planned workouts"],
        "summary": "Create a planned workout",
        "description": "Create a planned workout based off user's preferences and table of exercises in database",
        "operationId": "createPlannedWorkout",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannedWorkout"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "Hello world!"
              }
            },
            "application/xml": {
              "schema": {
                "type": "string",
                "example": "Hello world!"
              }
            }
          },
          "description": "Echo payload",
          "required": true
        }
      }
    },
    "/exercises/planned-workouts/{id}": {
      "get": {
        "tags": ["planned workouts"],
        "summary": "Get a planned workouts",
        "description": "Get a planned workouts",
        "operationId": "getPlannedWorkout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the planned workout to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannedWorkout"
                }
              }
            }
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["planned workouts"],
        "summary": "Update a planned workout",
        "description": "Update a planned workout",
        "operationId": "updatePlannedWorkout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the planned workout that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlannedWorkout"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "Hello world!"
              }
            },
            "application/xml": {
              "schema": {
                "type": "string",
                "example": "Hello world!"
              }
            }
          },
          "description": "Echo payload",
          "required": true
        }
      },
      "delete": {
        "tags": ["planned workouts"],
        "summary": "Delete a planned workout by ID",
        "description": "Delete a planned workout by ID",
        "operationId": "deletePlannedWorkout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "response": {
                    "value": "Successfully deleted"
                  }
                }
              }
            }
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": ["authentication"],
        "summary": "Login as user",
        "description": "Login as user",
        "operationId": "login",
        "security": [
          {
            "main_auth": ["read:users"]
          },
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/logout/{id}": {
      "get": {
        "tags": ["authentication"],
        "summary": "Logout as user",
        "description": "Logout as user",
        "operationId": "logout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get a single user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "main_auth": ["read:users"]
          },
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NOT_FOUND",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "tags": ["user"],
        "summary": "Reset a user password",
        "description": "Reset password",
        "operationId": "resetPassword",
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Expires-After": {
                "$ref": "#/components/headers/ExpiresAfter"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "requestBody description",
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PlannedWorkout": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of planned workout",
            "minLength": 4,
            "example": "Upper 1 04/11/2022"
          },
          "averageTime": {
            "description": "Average time to complete in minutes",
            "type": "number",
            "example": 40
          },
          "scheduledDay": {
            "description": "scheduled day of the week based off users preferences",
            "type": "string",
            "enum": ["mon", "tues", "wed", "thurs", "fri", "sat", "sun"]
          },
          "intensityRating": {
            "description": "Overall intensity rating based off of the exercises intensity",
            "type": "number",
            "example": 8.5
          },
          "completedStatus": {
            "description": "Has the user completed the workout?",
            "type": "boolean",
            "example": true
          }
        }
      },
      "Exercise": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the exercise",
            "type": "string",
            "example": "Glute bridge"
          },
          "description": {
            "description": "The detail of how to perform the exercise in text format",
            "type": "string",
            "example": "This exercise required you to squeeze at the top"
          },
          "restTime": {
            "description": "Recommended rest time for excerise",
            "type": "string",
            "example": "10 seconds"
          },
          "recommendedRepRange": {
            "description": "The recommended rep range for an exercise",
            "type": "number",
            "example": 10
          },
          "catergory": {
            "description": "The catergory the excerise belongs in",
            "type": "string",
            "example": "upper",
            "enum": ["upper", "lower", "glutes", "cardio", "full-body"]
          },
          "intensity": {
            "description": "The intensity rating of the exercise",
            "type": "number",
            "example": 1
          },
          "isCompound": {
            "description": "If the exercise is a compound exercise",
            "type": "boolean",
            "example": false
          },
          "exerciseTime": {
            "description": "Circuit workouts will use this time to build the daily workout (in seconds)",
            "type": "number",
            "example": 40
          },
          "video": {
            "description": "Included video of how to perform exercise",
            "type": "string"
          },
          "variations": {
            "description": "List of different types of variation for the exercise",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Bent over row", "Lat fly"]
          }
        }
      },
      "User": {
        "type": "object",
        "title": "user",
        "properties": {
          "name": {
            "description": "The name of the user",
            "type": "string",
            "example": "Evie"
          },
          "age": {
            "description": "User's age",
            "type": "number",
            "example": 23
          },
          "email": {
            "description": "User's email",
            "type": "string"
          },
          "password": {
            "description": "User's encrypted password",
            "type": "string"
          },
          "levelOfAccess": {
            "description": "User's access type",
            "type": "string",
            "example": "Subscriber"
          },
          "premium": {
            "description": "Premium band user is on",
            "type": "string",
            "example": "Free, Gold"
          },
          "completedWorkouts": {
            "description": "The exercises completed by the user",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Upper 1 02/11/2022", "Lower 1 03/11/2022"]
          },
          "permissions": {
            "description": "User's permissions",
            "type": "string",
            "example": "rw:USERS"
          },
          "workoutPreference": {
            "description": "The exercises completed by the user",
            "type": "object",
            "items": {
              "type": "string"
            },
            "example": {
              "monday": "LOWER",
              "tuesday": "CARDIO",
              "wednesday": "UPPER",
              "thursday": "GLUTES",
              "friday": "REST",
              "saturday": "CARDIO",
              "sunday": "REST"
            }
          }
        }
      },
      "BadRequest": {
        "properties": {
          "code": {
            "type": "integer",
            "description": "The error code",
            "example": 400
          },
          "error": {
            "type": "string",
            "description": "The error."
          }
        }
      },
      "NotFound": {
        "properties": {
          "code": {
            "type": "integer",
            "description": "The error code",
            "example": 404
          },
          "error": {
            "type": "string",
            "description": "The error.",
            "example": "Could not be found"
          }
        }
      }
    },
    "securitySchemes": {
      "main_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://example.com/api/oauth/dialog",
            "scopes": {
              "read:users": "read users info",
              "write:users": "modify or remove users"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "api_key"
      }
    },
    "headers": {
      "ExpiresAfter": {
        "description": "date in UTC when token expires",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}
